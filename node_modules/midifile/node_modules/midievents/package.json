{
  "name": "midievents",
  "description": "Decode/encode MIDI events.",
  "version": "0.1.0",
  "author": {
    "name": "Nicolas Froidure"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/nfroidure/MIDIEvents.git"
  },
  "engines": {
    "node": "*"
  },
  "devDependencies": {
    "mocha": "~1.7.0",
    "grunt": "~0.4.2",
    "browserify": "~2.36.1",
    "grunt-browserify": "~1.2.12",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-mocha-test": "~0.8.1",
    "matchdep": "~0.3.0"
  },
  "scripts": {
    "test": "mocha tests/*.mocha.js"
  },
  "keywords": [
    "sound",
    "music",
    "midi",
    "event",
    "events",
    "encode",
    "decode"
  ],
  "main": "./src/MIDIEvents",
  "readme": "MIDIEvents [![Build Status](https://travis-ci.org/nfroidure/MIDIEvents.png?branch=master)](https://travis-ci.org/nfroidure/MIDIEvents)\n============\n\nMIDIEvents is a helper intended to help working with MIDI events. MIDIEvents is\n the base project for MIDIFile and MIDIPlayer.\n\nMIDIEvents can be used either in modern browsers\n ([pick the last bundle](https://github.com/nfroidure/MIDIEvents/blob/master/dist/MIDIEvents.js))\n or with NodeJS by installing the following\n [NPM module](https://npmjs.org/package/midievents) :\n```bash\nnpm install midievents\n```\n\nWhat it does\n-------------\n* Decode midi events\n* Check midi events (using strictMode)\n*\tCalculate needed buffer to encode midi events\n*\tEncode midi events\n\nWhat it doesn't do\n-------------\n*\tReading MIDI files. It's the role of the\n [MIDIFile project](https://github.com/nfroidure/MIDIFile).\n* Playing MIDI files. It's the role of the\n [MIDIPlayer project](https://github.com/nfroidure/MIDIPlayer).\n\nUsage\n-------------\n```js\n// Your variable with an ArrayBuffer instance containing your MIDI events\nvar anyBuffer;\n\n// MIDI events parser\nvar event, events=[], parser;\nparser=new MIDIEvents.createParser(\n  new DataView(anyBuffer),\n    0, false);\nevent=parser.next();\ndo {\n  events.push(event);\n  event=parser.next();\n} while(event);\n\n// Check bufffer size before encodng\nif(anyBuffer.length >= MIDIEvents.getRequiredBufferLength(events)) {\n  console.log('ok');\n}\n\n// Encode MIDI events\nvar destination = new Uint8Array(anyBuffer);\nMIDIEvents.writeToTrack(events, destination);\n\n```\n\nContributing / Testing\n-------------\nInstall them and run the following command :\n\n```bash\nnpm install --dev\nsu npm install grunt-cli -g\ngrunt test\n```\n\nContributing\n-------------\n* Feel free to PR\n* If you find MIDI events the library can't read, create a test an do a pull\n request. I'll work on it asap.\n\nLicense\n-------\nCopyright Nicolas Froidure 2013. MIT licence.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nfroidure/MIDIEvents/issues"
  },
  "homepage": "https://github.com/nfroidure/MIDIEvents",
  "_id": "midievents@0.1.0",
  "_from": "midievents@~0.1.0"
}
