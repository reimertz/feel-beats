{
  "name": "midifile",
  "description": "Read/write standard MIDI files.",
  "version": "0.2.0",
  "author": {
    "name": "Nicolas Froidure"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/nfroidure/MIDIFile.git"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "midievents": "~0.1.0",
    "utf-8": "~0.1.0"
  },
  "devDependencies": {
    "mocha": "~1.7.0",
    "grunt": "~0.4.2",
    "browserify": "~2.36.1",
    "grunt-browserify": "~1.2.12",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-mocha-test": "~0.8.1",
    "matchdep": "~0.3.0"
  },
  "scripts": {
    "test": "mocha tests/*.mocha.js"
  },
  "keywords": [
    "sound",
    "music",
    "midi",
    "file",
    "format",
    "read",
    "write"
  ],
  "main": "./src/MIDIFile",
  "readme": "MIDIFile [![Build Status](https://travis-ci.org/nfroidure/MIDIFile.png?branch=master)](https://travis-ci.org/nfroidure/MIDIFile)\n============\n\nMIDIFile is a project intended to read/write standard MIDI files with\n JavaScript. MIDIFile is fully tested with the 3 existing MIDI formats.\n\nMIDIFile can be used either in modern browsers\n ([pick the last bundle](https://github.com/nfroidure/MIDIFile/blob/master/dist/MIDIFIle.js))\n or with NodeJS by installing the following\n [NPM module](https://npmjs.org/package/midifile) :\n```bash\nnpm install midifile\n```\n\nWhat it does\n-------------\n* Read MIDI files\n* Check MIDI file structure (using strictMode)\n*\tWrite MIDI files (still experimental)\n\nWhat it doesn't do\n-------------\n*\tPlaying MIDI files. It's the role of the\n [MIDIPlayer project](https://github.com/nfroidure/MIDIPlayer).\n\nYou can also find a [Karaoke MIDI player](http://midiwebkaraoke.com) based on\n MIDIFile and a very [trivial MIDI player](http://rest4.org/github/nfroidure/MIDIFile/master/tests/index.html)\n in the test folder.\n\nUsage\n-------------\n```js\n// Your variable with a ArrayBuffer instance containing your MIDI file\nvar anyBuffer;\n\n// Creating the MIDIFile instance\nvar midiFile= new MIDIFile(anyBuffer);\n\n// Reading headers\nmidiFile.header.getFormat(); // 0, 1 or 2\nmidiFile.header.getTracksCount(); // n\n// Time division\nif(midiFile.header.getTimeDivision()===MIDIFileHeader.TICKS_PER_BEAT) {\n\tmidiFile.header.getTicksPerBit();\n} else {\n\tmidiFile.header.getSMPTEFrames();\n\tmidiFile.header.getTicksPerFrame();\n}\n\n// MIDI events retriever\nvar events=midiFile.getMidiEvents();\nevents[0].subtype; // type of [MIDI event](https://github.com/nfroidure/MIDIFile/blob/master/src/MIDIEvents.js#L34)\nevents[0].playTime; // time in ms at wich the event must be played\nevents[0].param1; // first parameter\nevents[0].param2; // second one\n\n// Lyrics retriever\nvar lyrics=midiFile.getLyrics();\nlyrics[0].playTime; // Time at wich the text must be displayed\nlyrics[0].text; // The text content to be displayed\n\n// Reading whole track events and filtering them yourself\nvar trackEventsChunk=midiFile.tracks[0].getTrackEvents(),\n\tevents=new MIDIEvents.createParser(trackEventsChunk),\n\tevent;\nwhile(event=events.next()) {\n\t// Printing meta events containing text only\n\tif(event.type===MIDIEvents.EVENT_META&&event.text) {\n\t\tconsole.log('Text meta: '+event.text);\n\t}\n}\n```\n\nTesting\n-------------\nUnit tests are using mocha and NodeJS. Install them and run the following command :\n\n```bash\nmocha tests/*.mocha.js\n```\n\nWhy ArrayBuffers ?\n-------------\nArrayBuffer instances ar the best way to manage binary datas like MIDI files.\n\nRequirements\n-------------\n* ArrayBuffer, DataView or their polyfills\n\nContributing\n-------------\n* Feel free to PR\n* If you find a MIDI File the library can't read an if it's under a free, PR\n the file in the sounds folder and add tests for him. I'll work on it asap.\n\nLicense\n-------\nCopyright Nicolas Froidure 2013. MIT licence.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nfroidure/MIDIFile/issues"
  },
  "homepage": "https://github.com/nfroidure/MIDIFile",
  "_id": "midifile@0.2.0",
  "_from": "midifile@"
}
