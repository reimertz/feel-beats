{
  "name": "raspi-io",
  "version": "0.1.7",
  "description": "A Firmata-compatible Raspberry Pi I/O API",
  "main": "lib/raspi",
  "repository": {
    "type": "git",
    "url": "https://gitlab.theoreticalideations.com/nebrius/raspi-io"
  },
  "homepage": "https://gitlab.theoreticalideations.com/nebrius/raspi-io",
  "keywords": [
    "raspberrypi",
    "nodebots",
    "robots"
  ],
  "dependencies": {
    "async": "0.7.x"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "test": "node ./test/bootstrap.js"
  },
  "author": {
    "name": "Bryan Hughes",
    "email": "bryan@theoreticalideations.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/bryan-m-hughes/raspi-io/issues"
  },
  "readme": "Raspi-io\n========\n\nRaspi-io is a Firmata API compatible library for Raspbian running on the [Raspberry Pi](http://www.raspberrypi.org/) that can be used as an I/O plugin with [Johnny-Five](https://github.com/rwaldron/johnny-five). The official API docs can be found on the [Johnny-Five Wiki](https://github.com/rwaldron/johnny-five/wiki/IO-Plugins)\n\n## Installation\n\n```\nnpm install raspi-io\n```\n\n## Usage\n\n```\nvar raspi = require('raspi-io');\nvar board = new raspi();\n\n// Initialize the board\nboard.on('ready', function () {\n\n  // Set pin 7 (GPIO 4) as an output\n  board.pinMode(7, board.MODES.OUTPUT);\n\n  // Set pin 7's output to logic high\n  board.pins[7].value = board.HIGH;\n\n  // Read a pin value\n  console.log(board.pins[7].value); // outputs \"1\"\n\n});\n```\n\nPin numbers are identified by their pin number on the P1 header, so if you want to use GPIO 17, specify pin 11. Read [here](http://elinux.org/Rpi_Low-level_peripherals) for the full pinout of the P1 header.\n\nIn addition to the base requirements specified in the I/O plugin API for Johnny-Five, the following methods are supported: pinMode, digitalRead, and digitalWrite.\n\nNote: analogRead and analogWrite throw an error if called because the Raspberry Pi does not have proper hardware support for these functions.\n\nLicense\n=======\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Bryan Hughes bryan@theoreticalideations.com (https://theoreticalideations.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "readmeFilename": "README.md",
  "_id": "raspi-io@0.1.7",
  "dist": {
    "shasum": "8733ca246a95604ca7456e7f236fe927198c2e4e"
  },
  "_from": "raspi-io@latest",
  "_resolved": "https://registry.npmjs.org/raspi-io/-/raspi-io-0.1.7.tgz"
}
